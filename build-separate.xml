<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** Birt Module                                         ** -->
<!-- **	                                                    ** -->
<!-- ** @author Justin Miranda                              ** -->
<!-- ** @version 1.0                                        ** -->
<!-- ********************************************************* -->
<project name="BirtReportModule" default="package-module">
		
	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->

	
	<target name="init" description="initialization">
		<xmlcatalog id="common-dtds">
	        <dtd publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN" location="lib-common/config-1.0.dtd"/>
	    </xmlcatalog>
		
		<!-- Order of these loading config files is IMPORTANT.  The client must come first in order to load the ${module.*} values correctly -->
		<xmlproperty file="metadata/config.xml" >
			<xmlcatalog refid="common-dtds"/>
		</xmlproperty>

		<xmlproperty file="metadata/api-config.xml" >
			<xmlcatalog refid="common-dtds"/>
		</xmlproperty>		
		
		<property name="compile.arguments" value="-target 1.5" />
		
		<filterset id="variables.to.replace">
			<filter token="MODULE_ID" value="${module.id}" />
			<filter token="MODULE_NAME" value="${module.name}" />
			<filter token="MODULE_VERSION" value="${module.version}" />
			<filter token="MODULE_PACKAGE" value="${module.package}" />
		</filterset>
		
		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="lib-common">
				<include name="**/*.jar"/>
			</fileset>
		</path>

	</target>

	
	
	<target name="clean" description="Delete build and dist directories">
		<delete dir="dist" />
		<delete dir="build" />
	</target>
	
	
	<target name="compile-module" depends="init" description="Compiles the module">
		<mkdir dir="build/api" />
		<mkdir dir="build/client" />
		
		<!-- Copy other source data to the build folder -->
		<copy todir="build/client">
			<fileset dir="metadata/" includes="**/*.hbm.xml" />
			<fileset dir="src/" excludes="**/*.java" />
			<fileset dir="test/" excludes="**/*.java" />
		</copy>
		
		<!--  Compile module java files -->
		<javac destdir="build/client" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
			<compilerarg line="${compile.arguments}" />
			<src path="src" />
			<exclude name="**/BirtApiModuleActivator.java" />
		</javac>

		<!--  Compile module java files -->
		<javac destdir="build/api" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
			<compilerarg line="${compile.arguments}" />
			<src path="src" />
			<include name="**/BirtApiModuleActivator.java" />
		</javac>
		
		
		<!--  Compile module web java files -->
		<javac destdir="build/client" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
			<compilerarg line="${compile.arguments}" />
			<compilerarg line="-g" />
			<src path="web/src/" />
			<include name="**/*.java" />
		</javac>
		
	</target>

	<target name="package-module" depends="package-api-module, package-client-module"/>
	
	<target name="package-client-module" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />
		
		<!-- Copy module metadata -->
		<copy todir="build/client">
			<fileset dir="" includes="log4j.xml" />
			<fileset dir="metadata/" includes="**/*" excludes="config*.xml" />
			<filterset refid="variables.to.replace" />
		</copy>
				
		<!-- Copy module web data -->
		<copy todir="build/client/web/module/">
			<fileset dir="web/module/" includes="**/*" />
			<filterset refid="variables.to.replace" />
		</copy>

		<copy tofile="build/api/config.xml" file="metadata/config-api.xml" verbose="true">
			<filterset refid="variables.to.replace"/>		
		</copy>

		<copy tofile="build/client/config.xml" file="metadata/config.xml" verbose="true">
			<filterset refid="variables.to.replace"/>		
		</copy>
		
		<!-- Create distributable jar file -->
		<jar destfile="dist/birt-${module.version}.omod">
			<fileset dir="build/client" includes="**/*" />
		</jar>
	</target>
	
	
	
	<target name="package-api-module" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />
		
		<!-- Copy lib folder -->
		<!-- (lib should only contain this module's required -->
		<!-- libraries that OpenMRS doesn't contain already) -->
		<copy todir="build/api/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>
		
		<copy tofile="build/api/config.xml" file="metadata/config-api.xml"/>
		
		<!-- Create distributable jar file -->
		<jar destfile="dist/birt-api-${module.version}.omod">
			<fileset dir="build/api" includes="**/*" />
		</jar>
	</target>
	
	
	<!-- 	Convenience Not intended to be used by others. 
			This is only be used for convenience until I can figure out a better solution -->
	
	<target name="deploy-web" depends="package-module">
		<property environment="env"/>
		<copy todir="${env.CATALINA_HOME}/webapps/openmrs/WEB-INF/view/module/birt">
			<fileset dir="web/module" includes="**/*" />
		</copy>
		<!-- Copy the latest module to the modules directory to reflect 
			changes (module will be deployed on Tomcat restart) -->
		
	</target>
	
	<target name="deploy-module" depends="package-module">
	
	
	</target>
	
	<target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.jar">
			<fileset dir="build" >
				
			</fileset>
		</jar>
	</target>
			
	
	
	
	
</project>

